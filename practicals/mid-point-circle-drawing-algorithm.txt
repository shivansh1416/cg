import matplotlib.pyplot as plt

def midpoint_circle(radius):
    x_points = []
    y_points = []

    # Starting point (0, radius)
    x = 0
    y = radius
    
    # Initial decision parameter
    p = 1 - radius
    
    # Function to plot points in all octants
    def plot_circle_points(x_center, y_center, x, y):
        x_points.extend([
            x_center + x, x_center - x, x_center + x, x_center - x,
            x_center + y, x_center - y, x_center + y, x_center - y
        ])
        y_points.extend([
            y_center + y, y_center + y, y_center - y, y_center - y,
            y_center + x, y_center + x, y_center - x, y_center - x
        ])

    # Plot the initial point in all octants
    plot_circle_points(0, 0, x, y)
    
    # Loop to generate all points of the circle
    while x < y:
        x += 1
        if p < 0:
            p += 2 * x + 1
        else:
            y -= 1
            p += 2 * (x - y) + 1
        
        plot_circle_points(0, 0, x, y)
    
    return x_points, y_points

# Example usage of the Mid-Point Circle Drawing Algorithm
radius = 10
x_points, y_points = midpoint_circle(radius)

# Plotting the points generated by Mid-Point Circle Drawing Algorithm
plt.scatter(x_points, y_points)
plt.title('Mid-Point Circle Drawing Algorithm')
plt.xlabel('X')
plt.ylabel('Y')
plt.axis('equal')
plt.grid()
plt.show()
